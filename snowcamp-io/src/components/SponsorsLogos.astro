---
import sponsors from '../data/sponsors.json';
import { getCollection, getEntries } from 'astro:content';

// const sponsorEntries = await getCollection('sponsors');
// const sponsors = await getCollection('sponsors');
// const sponsorEntries = await getEntries(sponsors.data.);

export const languages = {
  en: 'English',
  fr: 'FranÃ§ais',
};

export const defaultLang = 'en';

export function getLangFromUrl(url: URL) {
  const [, lang] = url.pathname.split('/');
  console.log('lang', lang)
  return lang || 'en'
  // if (lang in ui) return lang as keyof typeof ui;
  return defaultLang;
}

interface Props {
	title: string;
	body: string;
	href: string;
}

const { href, title, body } = Astro.props;

const lang = getLangFromUrl(Astro.url)

const sponsorEntries = await getCollection('sponsors', ({ id }) => {
  return id.startsWith(`${lang}/`);
});

const { Content} = await sponsorEntries[0].render()
---

<li class="link-card">
	<!-- {sponsors.map(s => (
    <div>{s.name}</div>
  ))} -->
	{sponsorEntries.map(s => (
    <div>{s.data.name}<Content /></div>
    <div></div>
  ))}
</li>
<style>
	.link-card {
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}
</style>
